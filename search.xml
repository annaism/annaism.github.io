<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关机、重启和用户登录注销</title>
      <link href="/posts/25dc.html"/>
      <url>/posts/25dc.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="关机、重启和用户登录注销"><a href="#关机、重启和用户登录注销" class="headerlink" title="关机、重启和用户登录注销"></a>关机、重启和用户登录注销</h1><h2 id="1-关机-amp-重启命令"><a href="#1-关机-amp-重启命令" class="headerlink" title="1. 关机&amp;重启命令"></a>1. 关机&amp;重启命令</h2><h3 id="1-1-shutdown"><a href="#1-1-shutdown" class="headerlink" title="1.1 shutdown"></a>1.1 shutdown</h3><ul><li>shutdown -h now：表示立即关机</li><li>shutdown -h 1：表示1分钟后关机</li><li>shutdown -r now：立即重启</li></ul><h3 id="1-2-halt"><a href="#1-2-halt" class="headerlink" title="1.2 halt"></a>1.2 halt</h3><ul><li>halt：直接使用，关机</li></ul><h3 id="1-3-reboot"><a href="#1-3-reboot" class="headerlink" title="1.3 reboot"></a>1.3 reboot</h3><ul><li>reboot 重启系统</li></ul><h3 id="1-4-sync"><a href="#1-4-sync" class="headerlink" title="1.4 sync"></a>1.4 sync</h3><ul><li>sync：把内存的数据同步到磁盘上</li></ul><blockquote><p>当我们关机或者重启时，都应该先执行一下sync，防止数据丢失。</p></blockquote><h2 id="2-用户登录注销"><a href="#2-用户登录注销" class="headerlink" title="2. 用户登录注销"></a>2. 用户登录注销</h2><ul><li>登录时少用root账号登录，以避免操作失误的损失</li><li>平时可登录普通账户，再用“su - 用户名”切换成管理员登录</li></ul><h3 id="2-1-logout"><a href="#2-1-logout" class="headerlink" title="2.1 logout"></a>2.1 logout</h3><ul><li>logout：注销用户</li></ul><blockquote><p>在图形运行级别无效，在运行级别3有效。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi和vim编辑器</title>
      <link href="/posts/b400.html"/>
      <url>/posts/b400.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="vi和vim编辑器"><a href="#vi和vim编辑器" class="headerlink" title="vi和vim编辑器"></a>vi和vim编辑器</h1><h2 id="1-vi和vim的基本介绍"><a href="#1-vi和vim的基本介绍" class="headerlink" title="1. vi和vim的基本介绍"></a>1. vi和vim的基本介绍</h2><ul><li>所有Linux系统都会内置vi文本编辑器</li><li>vim是vi的升级版，可以主动以字体颜色分辨语法的正确性，代码补完和编译，错误跳转等功能。</li></ul><h2 id="2-vi和vim的三种模式"><a href="#2-vi和vim的三种模式" class="headerlink" title="2. vi和vim的三种模式"></a>2. vi和vim的三种模式</h2><h3 id="2-1-正常模式"><a href="#2-1-正常模式" class="headerlink" title="2.1 正常模式"></a>2.1 正常模式</h3><ul><li>在正常模式下，我们可以使用快捷键。</li><li>用vim打开一个文件就直接进入一般模式<code>（vim filename）</code></li><li>可以使用【删除字符】或【删除整行】来处理文档内容，也可以使用【复制黏贴按钮】</li></ul><h3 id="2-2-插入-编辑模式"><a href="#2-2-插入-编辑模式" class="headerlink" title="2.2 插入/编辑模式"></a>2.2 插入/编辑模式</h3><ul><li>在这个模式下，可以编辑文件内容。</li><li>按下i,I,o,O,a,A,r,R等字母就可进入编辑模式。<code>一般用i就好</code></li><li>退出编辑模式 <code>esc</code></li></ul><h3 id="2-3-命令行模式"><a href="#2-3-命令行模式" class="headerlink" title="2.3 命令行模式"></a>2.3 命令行模式</h3><ul><li>在这个模式中，可以利用指令完成读取，存盘，替换，离开，显示行号的等动作。</li><li>：wq保存退出</li><li>：q无修改直接退出</li><li>:q!不保存修改直接退出</li></ul><h2 id="3-Vim-的常见指令案例"><a href="#3-Vim-的常见指令案例" class="headerlink" title="3. Vim 的常见指令案例"></a>3. Vim 的常见指令案例</h2><p>（大部分在正常模式下使用）</p><ol><li>yy：拷贝当前行 <code>（p）粘贴</code></li><li>5yy：拷贝当前5行</li><li>dd：删除当前行</li><li>5dd：删除当前行向下的5行</li><li>在文件中查找某个单词：命令行输入 /（查找内容后回车），按n查找下一个</li><li>设置文件行号：set nu，取消文件行号：set nonu</li><li>编辑文件，正常模式下使用快捷键到达文档最末行：G，最首行：gg</li><li>撤销输入：在正常模式下输入u</li><li>编辑文件，光标移动到某行：shift+g<ul><li>显示行号：set nu</li><li>输入行号这个数</li><li>输入shift+g</li></ul></li></ol><h2 id="4-vim其他常见指令补充"><a href="#4-vim其他常见指令补充" class="headerlink" title="4. vim其他常见指令补充"></a>4. vim其他常见指令补充</h2><h3 id="4-1-文件命令"><a href="#4-1-文件命令" class="headerlink" title="4.1 文件命令"></a>4.1 文件命令</h3><p>指令|说明</p><p>vim [file1 file2 file3 …]|打开单个或多个文件</p><p>:open file|在vim窗口中打开一个新文件</p><p>:split file|在新窗口中打开文件（split打开的窗口都是横向的，使用vsplit可以纵向打开窗口。）</p><p>Ctrl+ww| 移动到下一个窗口</p><p>Ctrl+wj |移动到下方的窗口</p><p>Ctrl+wk |移动到上方的窗口</p><p>:close |最后一个窗口不能使用此命令，可以防止意外退出vim。</p><p>:only|关闭所有窗口，只保留当前窗口</p><p>:bn|切换到下一个文件</p><p>:bp|切换到上一个文件</p><p>:args|查看当前打开的文件列表，当前正在编辑的文件会用[]括起来</p><p>:e <a href="ftp://192.168.10.76/abc.txt" target="_blank" rel="noopener">ftp://192.168.10.76/abc.txt</a>| 打开远程文件，比如ftp或者share folder</p><h3 id="4-2-普通模式"><a href="#4-2-普通模式" class="headerlink" title="4.2 普通模式"></a>4.2 普通模式</h3><h4 id="4-2-1-插入命令"><a href="#4-2-1-插入命令" class="headerlink" title="4.2.1 插入命令"></a>4.2.1 插入命令</h4><p>指令|说明</p><p>i |在当前位置生前插入</p><p>I |在当前行首插入</p><p>a |在当前位置后插入</p><p>A |在当前行尾插入</p><p>o |在当前行之后插入一行</p><p>O |在当前行之前插入一行</p><h4 id="4-2-2-游标移动"><a href="#4-2-2-游标移动" class="headerlink" title="4.2.2 游标移动"></a>4.2.2 游标移动</h4><p>指令|说明</p><p>gg |移动到文件头。 = [[<br>G（shift + g）| 移动到文件尾。 = ]]</p><p>行數 → G|移動到第 n 行</p><p>冒号+行号，回车| 比如跳到240行就是 :240回车</p><p>h | 左移一个字符</p><p>l|右移一个字符，这个命令很少用，一般用w代替。</p><p>k |上移一个字符</p><p>j |下移一个字符</p><p>w |向前移动一个单词（光标停在单词首部）</p><p>b | 向后移动一个单词 2b 向后移动2个单词</p><p>e |同w，只不过是光标停在单词尾部</p><p>ge |同b，光标停在单词尾部。</p><p>^|移动到本行第一个非空白字符上。</p><p>0|移动到本行第一个字符上</p><p>HOME |移动到本行第一个字符。同0健。</p><p>$ |移动到行尾 3$ 移动到下面3行的行尾</p><p>f（find）| fx将找到光标后第一个为x的字符，3fd将找到第三个为d的字符。</p><p>F |同f，反向查找</p><h4 id="4-2-3-撤销和重做"><a href="#4-2-3-撤销和重做" class="headerlink" title="4.2.3 撤销和重做"></a>4.2.3 撤销和重做</h4><p>指令|说明</p><p>u |撤销（Undo）</p><p>U |撤销对整行的操作</p><p>Ctrl + r |重做（Redo），即撤销的撤销。</p><h4 id="4-2-4-删除命令"><a href="#4-2-4-删除命令" class="headerlink" title="4.2.4 删除命令"></a>4.2.4 删除命令</h4><p>指令|说明</p><p>x |删除当前字符</p><p>3x |删除当前光标开始向后三个字符</p><p>X |删除当前字符的前一个字符。X=dh</p><p>dl |删除当前字符， dl=x</p><p>dh |删除前一个字符</p><p>dd |删除当前行</p><p>dj |删除上一行</p><p>dk |删除下一行</p><p>10d |删除当前行开始的10行。</p><p>D |删除当前字符至行尾。D=d$</p><p>d$ |删除当前字符之后的所有字符（本行）</p><p>kdgg |删除当前行之前所有行（不包括当前行）</p><p>jdG（jd shift + g） |删除当前行之后所有行（不包括当前行）</p><p>:1,10d |删除1-10行</p><p>:11,$d |删除11行及以后所有的行</p><p>:1,$d |删除所有行</p><p>J(shift + j)|删除两行之间的空行，实际上是合并两行。</p><h4 id="4-2-5-拷贝，剪贴和粘贴"><a href="#4-2-5-拷贝，剪贴和粘贴" class="headerlink" title="4.2.5 拷贝，剪贴和粘贴"></a>4.2.5 拷贝，剪贴和粘贴</h4><p>指令|说明</p><p>yy |拷贝当前行</p><p>nyy |拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。</p><p>p |在当前光标后粘贴,如果之前使用了yy命令来复制一行，那么就在当前行的下一行粘贴。</p><p>shift+p |在当前行前粘贴</p><p>:1,10 co 20 |将1-10行插入到第20行之后。</p><p>:1,$ co $ |将整个文件复制一份并添加到文件尾部。</p><p>ddp |交换当前行和其下一行</p><p>xp| 交换当前字符和其后一个字符</p><p>ndd|剪切当前行之后的n行。利用p命令可以对剪切的内容进行粘贴</p><p>:1,10d|将1-10行剪切。利用p命令可将剪切后的内容进行粘贴。</p><p>:1, 10 m 20 |将第1-10行移动到第20行之后。</p><p>正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按y即可复制</p><h4 id="4-2-6-退出命令"><a href="#4-2-6-退出命令" class="headerlink" title="4.2.6 退出命令"></a>4.2.6 退出命令</h4><p>指令|说明</p><p>:wq |保存并退出</p><p>ZZ |保存并退出</p><p>:q! |强制退出并忽略所有更改</p><p>:e! |放弃所有修改，并打开原来文件。</p><p>:q | 未修改直接退出</p><h4 id="4-2-7-注释命令"><a href="#4-2-7-注释命令" class="headerlink" title="4.2.7 注释命令"></a>4.2.7 注释命令</h4><p>perl程序中#开始的行为注释，所以要注释某些行，只需在行首加入#</p><p>指令|说明</p><p>3,5 s/^/#/g |注释第3-5行</p><p>3,5 s/^#//g |解除3-5行的注释</p><p>1,$ s/^/#/g |注释整个文档。</p><p>:%s/^/#/g |注释整个文档，此法更快。</p><h3 id="4-3-执行shell命令"><a href="#4-3-执行shell命令" class="headerlink" title="4.3 执行shell命令"></a>4.3 执行shell命令</h3><ul><li>:!command</li></ul><p>指令|说明</p><p>:!ls |列出当前目录下文件</p><p>:!perl -c script.pl |检查perl脚本语法，可以不用退出vim，非常方便。</p><p>:!perl script.pl |执行perl脚本，可以不用退出vim，非常方便。</p><p>:suspend或Ctrl - Z |挂起vim，回到shell，按fg可以返回vim。</p><h3 id="4-4-帮助命令"><a href="#4-4-帮助命令" class="headerlink" title="4.4 帮助命令"></a>4.4 帮助命令</h3><p>指令|说明</p><p>:help or F1 |显示整个帮助</p><p>:help xxx |显示xxx的帮助，比如 :help i, :help CTRL-[（即Ctrl+[的帮助）。</p><p>:help ‘number’ |Vim选项的帮助用单引号括起</p><p>:help &lt;Esc&gt; |特殊键的帮助用&lt;&gt;扩起</p><p>:help -t |Vim启动参数的帮助用-</p><p>：help i_&lt;Esc&gt;| 插入模式下Esc的帮助，某个模式下的帮助用模式_主题的模式</p><p>帮助文件中位于||之间的内容是超链接，可以用Ctrl+]进入链接，Ctrl+o（Ctrl + t）返回</p><h3 id="4-5-其他非编辑命令"><a href="#4-5-其他非编辑命令" class="headerlink" title="4.5 其他非编辑命令"></a>4.5 其他非编辑命令</h3><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>.</td><td>重复前一次命令</td></tr></tbody></table><p>:set ruler?　|查看是否设置了ruler，在.vimrc中，使用set命令设制的选项都可以通过这个命令查看</p><p>:scriptnames　|查看vim脚本文件的位置，比如.vimrc文件，语法文件及plugin等。</p><p>:set list |显示非打印字符，如tab，空格，行尾等。如果tab无法显示，请确定用set lcs=tab:&gt;-命令设置了.vimrc文件，并确保你的文件中的确有tab，如果开启了 expandtab，那么tab将被扩展为空格。</p><ul><li>Vim教程<ul><li>在Unix系统上 $ vimtutor</li><li>在Windows系统上 :help tutor</li></ul></li><li>录制宏:<ul><li>按q键加任意字母开始录制，再按q键结束录制（这意味着vim中的宏不可嵌套），使用的时候@加宏名，比如qa。。。q录制名为a的宏，@a使用这个宏。</li></ul></li><li>:syntax 列出已经定义的语法项</li><li>:syntax clear 清除已定义的语法规则</li><li>:syntax case match 大小写敏感，int和Int将视为不同的语法元素</li><li>:syntax case ignore 大小写无关，int和Int将视为相同的语法元素，并使用同样的配色方案</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux目录结构</title>
      <link href="/posts/2046.html"/>
      <url>/posts/2046.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Linux基本目录结构"><a href="#Linux基本目录结构" class="headerlink" title="Linux基本目录结构"></a>Linux基本目录结构</h1><h2 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1. 基本介绍"></a>1. 基本介绍</h2><ul><li>Linux的文件系统采用级层式子的树状目录结构，</li><li>最上层是根目录“/”</li><li><strong>Linux世界里，一切皆文件。</strong></li></ul><h2 id="2-目录用途"><a href="#2-目录用途" class="headerlink" title="2. 目录用途"></a>2. 目录用途</h2><ul><li><code>/bin：</code> 是Binary的缩写，这个目录存放着<code>最经常使用的命令</code>。</li><li>/sbin：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li><li><code>/home：</code>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li><li><code>/root：</code>该目录为系统管理员，也称作超级权限者的用户主目录。</li><li>/lib：系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</li><li>/lost+found：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</li><li>/etc：所有的系统管理所需要的配置文件和子目录my.conf。</li><li><code>/usr/local</code>：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。</li><li><code>/boot：</code>存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</li><li>/proc：这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息。</li><li>/srv：service的缩写，该目录存放一些服务启动之后需要提供的数据。</li><li>/sys：这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs。</li><li>/tmp：这个目录是用来存放一些临时文件的。</li><li>/dev：类似windows的设备管理器，把所有的硬件用文件的形式存储。</li><li><code>/media：</code>linux系统会自动识别一些设备，例如U盘光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</li><li><code>/mnt：</code>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里面的内容了。</li><li><code>/opt：</code>这是给主机额外安装软件所摆放的目录，如安装ORACLE数据库就可放到该目录下。默认为空。</li><li>/usr/local：这是另一个给主机额外安装软件所安装的目录，一般是通过编译源码的方式安装的程序。</li><li><code>/var：</code>这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下，包括各种日志文件。</li><li>/selinux：SELinux是一种安全子系统，它能控制程序只能访问特定文件。</li></ul><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><ol><li>Linux的目录中有且只有一个根目录。</li><li>Linux的各个目录存放的内容是规划好，不用乱放文件。</li><li>Linux是以文件的形式管理我们的设备，因此linux系统，一切皆为文件。</li><li>Linux的各个文件目录下存放什么内容，必须有一个认识。</li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joker</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Joker-amp-amp-Anna"><a href="#Joker-amp-amp-Anna" class="headerlink" title="Joker &amp;&amp; Anna"></a>Joker &amp;&amp; Anna</h1><p><span class="github-emoji"><span>😊</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="–Hello-World"><a href="#–Hello-World" class="headerlink" title="–Hello World"></a>–Hello World</h2>]]></content>
      
      
      <categories>
          
          <category> Joker. </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Joker. </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
